

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Peter
 */
public class Program extends javax.swing.JFrame {

    File sourceCode = null;
    File output = null;
    //LexicalAnalyser lexer = new LexicalAnalyser();
    SyntaxAnalyser analyser = new SyntaxAnalyser();

    /**
     * Creates new form LexicalAnalyzer
     */
    public Program() {
        initComponents();
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        jSplitPane.setResizeWeight(0.45);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_SelectSourceCode = new javax.swing.JButton();
        lbl_notification = new javax.swing.JLabel();
        jSplitPane = new javax.swing.JSplitPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_result = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_source = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Syntax Analyzer, by student: Phuc Le, CPSC323");
        setPreferredSize(new java.awt.Dimension(800, 580));
        setSize(new java.awt.Dimension(800, 580));

        btn_SelectSourceCode.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_SelectSourceCode.setForeground(new java.awt.Color(0, 102, 102));
        btn_SelectSourceCode.setText("Select Source Code File");
        btn_SelectSourceCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SelectSourceCodeActionPerformed(evt);
            }
        });

        lbl_notification.setForeground(new java.awt.Color(153, 102, 0));
        lbl_notification.setText("please select source code file (*.txt only)");

        txt_result.setColumns(20);
        txt_result.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        txt_result.setRows(5);
        jScrollPane2.setViewportView(txt_result);

        jSplitPane.setRightComponent(jScrollPane2);

        txt_source.setColumns(20);
        txt_source.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        txt_source.setRows(5);
        jScrollPane1.setViewportView(txt_source);

        jSplitPane.setLeftComponent(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btn_SelectSourceCode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_notification, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
            .addComponent(jSeparator2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_SelectSourceCode, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_notification, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btn_SelectSourceCode.getAccessibleContext().setAccessibleName("btn_selectSourceCode");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_SelectSourceCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SelectSourceCodeActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        fileChooser.setFileFilter(filter);
        fileChooser.setCurrentDirectory(new File("."));
        fileChooser.showOpenDialog(this);
        sourceCode = fileChooser.getSelectedFile();
        if (sourceCode != null) {
           // txt_result.setText("");
            analyser.reset();
            output = new File(sourceCode.getAbsolutePath().replace(".txt", "_output.txt"));           
            if (sourceCode != null) {

                List<String> fileContent = readFile(sourceCode);
                analyser.clearTokens();
                String source = "";
                int lineNumber = 1;               
                for (String line : fileContent) {
                    source += line + "\n";
                    //result.addAll(lexer.analyzeSource(line, lineNumber));
                   
                    analyser.input(line, lineNumber);
                    lineNumber++;
                }
                txt_source.setText(source);
                analyser.func_rat16f();
                txt_result.setText(analyser.getResult());
                
                // NEED TO SAVE TOKENS
                save(txt_result.getText());
                lbl_notification.setText("Output was saved in " + output.getAbsolutePath());
            }
        }
    }//GEN-LAST:event_btn_SelectSourceCodeActionPerformed

    private void save(String tokens) {
        BufferedWriter bufferWriter = null;
        try {
            bufferWriter = new BufferedWriter(new FileWriter(output));

            txt_result.write(bufferWriter);

        } catch (IOException ex) {
            ex.printStackTrace();
        } finally {
            if (bufferWriter != null) {
                try {
                    bufferWriter.close();
                } catch (IOException e) {
                    // one of the few times that I think that it's OK
                    // to leave this blank
                }
            }
        }
    }

    public java.util.List<String> readFile(File fin) {
        FileInputStream fis;
        List<String> fileContent = new ArrayList<>();

        try {
            fis = new FileInputStream(fin);
            BufferedReader br = new BufferedReader(new InputStreamReader(fis));
            String line = null;
            while ((line = br.readLine()) != null) {
                fileContent.add(line);
            }
            br.close();
        } catch (FileNotFoundException ex) {
            System.err.println("File Not Found");
        } catch (IOException ex) {
            System.err.println("I/O Exception");
        }
        return fileContent;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Program.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Program.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Program.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Program.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Program().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_SelectSourceCode;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSplitPane jSplitPane;
    private javax.swing.JLabel lbl_notification;
    private javax.swing.JTextArea txt_result;
    private javax.swing.JTextArea txt_source;
    // End of variables declaration//GEN-END:variables
}
